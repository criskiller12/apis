import pymysql.cursors
from flask import Flask,jsonify,request
#nos permite configurar la conexion y conecternos al servidor
def connection_mysql():
    connection = pymysql.Connect(
        host='localhost',
        user='root',
        password='',
        database='user',
        cursorclass=pymysql.cursors.DictCursor

    )
    return connection

app = Flask(__name__)


@app.route('/create', methods=['POST'])

def create():
    #request permite realizar pedidos http
    data = request.get_json()
    connection = connection_mysql()
    with connection:
        with connection.cursor() as cursor:
            sql = "INSERT INTO data_user (email, password) VALUES (%s, %s)"
            #el cursor sirve para realizar consultas 
            cursor.execute(sql, (data['email'], data['password']))

        #para cofirmar y guardar los cambios permatentemente 
        connection.commit()
    
    return jsonify({
        'message':'creacion exitosa'
    }), 201

@app.route('/listar', methods=['GET'])

def list():
    connection = connection_mysql()
    with connection:
        with connection.cursor() as cursor:
            sql = "SELECT * FROM data_user"
            cursor.execute(sql)
            #nos permite canturar los metodos de una lista de tuplas para eso es fetchall para capturar los registros 
            result = cursor.fetchall()
    
    return jsonify({
        'datos':result
    }), 200
    
@app.route('/delete', methods=['DELETE'])
#eliminar datos
def delete():
    connection = connection_mysql()
    with connection:
        with connection.cursor() as cursor:
            sql = "DELETE FROM data_user WHERE id = 2"
            cursor.execute(sql)
            connection.commit()
    return jsonify({
        'message':'fila eliminada'
    }),200


@app.route('/update', methods=['PUT'])

def update():
    date = request.get_json()
    connection = connection_mysql()
    with connection:
        with connection.cursor() as cursor:
            sql = "UPDATE data_user SET email = %s WHERE id = %s"
            cursor.execute(sql, (date['email'], date['id']))
            connection.commit()
    return jsonify({
        'message':'echo'
    }),200


if __name__ == '__main__':
    





    app.run(debug=True,port=3306)

'''{
    "email": "jk@hotmal.com",
    "password": "contrase√±a123"
}'''
#dato de pruba 
